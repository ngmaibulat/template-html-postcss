doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet", href="main.css")
    title Document
    script(src="script.js", type="module")
  body
    header
      nav
        ul
          li
            a(href="#") Home
          li
            a(href="#") Menu
          li
            a(href="#") About
          li
            a(href="#") Contact
          li
            a(href="#", id="theme-switch") Theme
    main.container
      form
        fieldset
          label
            | First name
            input(name="first_name", placeholder="First name", autocomplete="given-name")
          label
            | Email
            input(type="email", name="email", placeholder="Email", autocomplete="email")
        input(type="submit", value="Subscribe")
      article
        h3 Title
        | Content
        details
          summary Summary
          p
            | C# is a general-purpose high-level programming language supporting multiple paradigms. C# encompasses static typing, strong typing, lexically scoped, imperative, declarative, functional, generic, object-oriented (class-based), and component-oriented programming disciplines.[17]
            | The principal inventors of the C# programming language were Anders Hejlsberg, Scott Wiltamuth, and Peter Golde from Microsoft. It was first widely distributed in July 2000 and was later approved as an international standard by Ecma (ECMA-334) in 2002 and ISO/IEC (ISO/IEC 23270 and 20619[c]) in 2003. Microsoft introduced C# along with .NET Framework and Visual Studio, both of which were closed-source. At the time, Microsoft had no open-source products. Four years later, in 2004, a free and open-source project called Mono began, providing a cross-platform compiler and runtime environment for the C# programming language. A decade later, Microsoft released Visual Studio Code (code editor), Roslyn (compiler), and the unified .NET platform (software framework), all of which support C# and are free, open-source, and cross-platform. Mono also joined Microsoft but was not merged into .NET.
            | As of November 2024, the most recent stable version of the language is C# 13.0, which was released in 2024 in .NET 9.0.
            | Design goals
            | The Ecma standard lists these design goals for C#:
            |   - The language is intended to be a simple, modern, general-purpose, object-oriented programming language.
            |    - The language, and implementations thereof, should provide support for software engineering principles such as strong type checking, array bounds checking, detection of attempts to use uninitialized variables, and automatic garbage collection.[20]: 563  Software robustness, durability, and programmer productivity are important.
            |    - The language is intended for use in developing software components suitable for deployment in distributed environments.
            |    - Portability is very important for source code and programmers, especially those already familiar with C and C++.
            |    - Support for internationalization is very important.
            |    - C# is intended to be suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.
            |    - Although C# applications are intended to be economical with regard to memory and processing power requirements, the language was not intended to compete directly on performance and size with C or assembly language.[21]
            | History
            | During the development of the .NET Framework, the class libraries were originally written using a managed code compiler system named Simple Managed C (SMC).[22][23]
            | In January 1999, Anders Hejlsberg formed a team to build a new language at the time called Cool, which stood for "C-like Object Oriented Language".
            | Microsoft had considered keeping the name "Cool" as the final name of the language, but chose not to do so for trademark reasons.
            | By the time the .NET project was publicly announced at the July 2000 Professional Developers Conference, the language had been renamed C#,
            | and the class libraries and ASP.NET runtime had been ported to C#.
            | Hejlsberg is C#'s principal designer and lead architect at Microsoft, and was previously involved with the design of Turbo Pascal,
            | Embarcadero Delphi (formerly CodeGear Delphi, Inprise Delphi and Borland Delphi),
            | and Visual J++. In interviews and technical papers, he has stated that flaws[25]
            | in most major programming languages (e.g. C++, Java, Delphi, and Smalltalk)
            | drove the fundamentals of the Common Language Runtime (CLR), which, in turn, drove the design of the C# language.
            | James Gosling, who created the Java programming language in 1994, and Bill Joy,
            | a co-founder of Sun Microsystems, the originator of Java, called C# an "imitation" of Java;
            | Gosling further said that "C# is sort of Java with reliability,
            | productivity and security deleted."
            | In July 2000, Hejlsberg said that C# is "not a Java clone" and is "much closer to C++" in its design.
            | Since the release of C# 2.0 in November 2005, the C# and Java languages have evolved on increasingly divergent trajectories,
            | becoming two quite different languages. One of the first major departures came with the addition of generics to both languages,
            | with vastly different implementations. C# makes use of reification to provide "first-class"
            | generic objects that can be used like any other class, with code generation performed at class-load time.
            | culminating in the LINQ extensions released with C# 3.0 and its supporting framework of lambda expressions, extension methods, and anonymous types.
            | These features enable C# programmers to use functional programming techniques, such as closures, when it is advantageous to their application.
            | The LINQ extensions and the functional imports help developers reduce the amount of boilerplate code that is included in common tasks
            | like querying a database, parsing an XML file, or searching through a data structure,
            | shifting the emphasis onto the actual program logic to help improve readability and maintainability.

    footer footer
